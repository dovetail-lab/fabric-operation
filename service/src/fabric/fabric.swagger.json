{
  "swagger": "2.0",
  "info": {
    "title": "fabric/fabric.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/connection": {
      "post": {
        "summary": "Connect: create or find a Fabric connection.  \nReturns the corresponding connection ID.",
        "operationId": "Gateway_Connect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fabricConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fabricConnectionData"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/v1/transaction": {
      "post": {
        "summary": "Execute: execute a transaction on a Fabric endpoint.  \nReturns the result of the transaction.",
        "operationId": "Gateway_Execute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fabricTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fabricTransactionData"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    }
  },
  "definitions": {
    "fabricConnectionData": {
      "type": "object",
      "properties": {
        "channelId": {
          "type": "string",
          "description": "Name of the Fabric channel to connect to. Default is pre-configured by gateway service."
        },
        "userName": {
          "type": "string",
          "description": "Name of Fabric client user for establishing the connection. Default is pre-configured by gateway service."
        },
        "orgName": {
          "type": "string",
          "description": "Name of the Fabric org that created the client user. Default is pre-configured by gateway service."
        },
        "networkConfig": {
          "type": "string",
          "description": "File name for Fabric network config. Default is pre-configured by gateway service."
        },
        "pattenMatchers": {
          "type": "string",
          "description": "File name for endpoint patten matchers. Default is pre-configured by gateway service."
        }
      },
      "title": "Request data for creating a Fabric connection in the gateway service"
    },
    "fabricConnectionResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Status code. 200=success"
        },
        "message": {
          "type": "string",
          "title": "Error messages if code is not 200"
        },
        "connectionId": {
          "type": "string",
          "format": "uint64",
          "title": "ID of the resulting Fabric connection"
        }
      },
      "title": "Response from a Fabric connection request"
    },
    "fabricTransactionData": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string",
          "format": "uint64",
          "title": "Required. ID of a Fabric connection returned by a ConnectRequest"
        },
        "type": {
          "$ref": "#/definitions/fabricTransactionType",
          "title": "Required. 0=INVOKE or 1=QUERY"
        },
        "chaincodeId": {
          "type": "string",
          "description": "Required. Name of the Fabric chaincode to be called."
        },
        "timeout": {
          "type": "string",
          "format": "int64",
          "description": "Request timeout in milliseconds. Default is 0, i.e., no timeout."
        },
        "endpoint": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fabric connnection endpoints to send the request. Default is randomly chosen from all available endpoints."
        },
        "transaction": {
          "type": "string",
          "description": "Required. Name of the Fabric chaincode transaction."
        },
        "parameter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "parameters for the transaction"
        },
        "transientMap": {
          "type": "string",
          "description": "transient map for the transaction as a JSON string."
        }
      },
      "title": "Request data for a Fabric chaincode transaction"
    },
    "fabricTransactionResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Status code. 200=success"
        },
        "message": {
          "type": "string",
          "title": "Error messages if code is not 200"
        },
        "data": {
          "type": "string",
          "title": "Returned data as JSON string"
        }
      },
      "title": "Response from a Fabric transaction"
    },
    "fabricTransactionType": {
      "type": "string",
      "enum": [
        "INVOKE",
        "QUERY"
      ],
      "default": "INVOKE",
      "description": "Type of Fabric transaction: INVOKE or QUERY."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
